{"numFailedTestSuites":2,"numFailedTests":7,"numPassedTestSuites":4,"numPassedTests":29,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":6,"numTotalTests":36,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1739395864709,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["userController","register"],"duration":1741,"failureDetails":[],"failureMessages":[],"fullName":"userController register Should be able to register user","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should be able to register user"},{"ancestorTitles":["userController","register"],"duration":1201,"failureDetails":[],"failureMessages":[],"fullName":"userController register Should not be able to register user","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should not be able to register user"},{"ancestorTitles":["userController","login"],"duration":1172,"failureDetails":[],"failureMessages":[],"fullName":"userController login Should be able to login user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should be able to login user"},{"ancestorTitles":["userController","login"],"duration":897,"failureDetails":[],"failureMessages":[],"fullName":"userController login Should not be able to login user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should not be able to login user"},{"ancestorTitles":["userController","modify"],"duration":1152,"failureDetails":[],"failureMessages":[],"fullName":"userController modify Should be able to modify user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should be able to modify user"},{"ancestorTitles":["userController","modify"],"duration":1526,"failureDetails":[],"failureMessages":[],"fullName":"userController modify Should not be able to modify user","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should not be able to modify user"}],"endTime":1739395876671,"message":"","name":"/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/user.controller.test.ts","startTime":1739395864754,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ContactController","Get contacts"],"duration":13,"failureDetails":[{"matcherResult":{"expected":1,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at /home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts:32:38\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts:38:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ContactController Get contacts Should return a list of 1 contacts","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Should return a list of 1 contacts"},{"ancestorTitles":["ContactController","Get contacts"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"ContactController Get contacts Should not return a list of contacts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should not return a list of contacts"},{"ancestorTitles":["ContactController","Add emergencies contacts"],"duration":12,"failureDetails":[{"matcherResult":{"actual":409,"expected":200,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m409\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m409\u001b[39m\n    at /home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts:47:32\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts:38:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ContactController Add emergencies contacts Should create a contact and return true","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Should create a contact and return true"},{"ancestorTitles":["ContactController","Add emergencies contacts"],"duration":13,"failureDetails":[{"matcherResult":{"actual":"Forbidden: NOT ALLOWED","expected":"This phone number is already in use","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"This phone number is already in use\"\u001b[39m\nReceived: \u001b[31m\"Forbidden: NOT ALLOWED\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"This phone number is already in use\"\u001b[39m\nReceived: \u001b[31m\"Forbidden: NOT ALLOWED\"\u001b[39m\n    at /home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts:54:30\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts:38:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ContactController Add emergencies contacts Should not create a contact and return true","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Should not create a contact and return true"},{"ancestorTitles":["ContactController","Modify contact"],"duration":9,"failureDetails":[{"matcherResult":{"actual":"Forbidden: NOT ALLOWED","expected":"Contact modified successfully","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Contact modified successfully\"\u001b[39m\nReceived: \u001b[31m\"Forbidden: NOT ALLOWED\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Contact modified successfully\"\u001b[39m\nReceived: \u001b[31m\"Forbidden: NOT ALLOWED\"\u001b[39m\n    at /home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts:67:30\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts:38:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ContactController Modify contact Should modify the data and return true","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Should modify the data and return true"},{"ancestorTitles":["ContactController","Modify contact"],"duration":131,"failureDetails":[{"matcherResult":{"actual":"Forbidden: NOT ALLOWED","expected":"This phone is already in use","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"This phone is already in use\"\u001b[39m\nReceived: \u001b[31m\"Forbidden: NOT ALLOWED\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"This phone is already in use\"\u001b[39m\nReceived: \u001b[31m\"Forbidden: NOT ALLOWED\"\u001b[39m\n    at /home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts:79:30\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts:38:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ContactController Modify contact Should not modify the data and return false","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Should not modify the data and return false"}],"endTime":1739395878432,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mContactController › Get contacts › Should return a list of 1 contacts\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 |\u001b[39m                 \u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m\"/contacts/0\"\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 31 |\u001b[39m                 \u001b[33m.\u001b[39mauth(token\u001b[33m,\u001b[39m{type\u001b[33m:\u001b[39m\u001b[32m'bearer'\u001b[39m})\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 32 |\u001b[39m             expect(res\u001b[33m.\u001b[39mbody\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m         })\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m         test(\u001b[32m\"Should not return a list of contacts\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m             \u001b[36mconst\u001b[39m res \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m requests(app)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/contact.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:32:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/contact.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:38:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mContactController › Add emergencies contacts › Should create a contact and return true\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m409\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 45 |\u001b[39m                 \u001b[33m.\u001b[39mauth(token\u001b[33m,\u001b[39m{type\u001b[33m:\u001b[39m\u001b[32m'bearer'\u001b[39m})\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m                 \u001b[33m.\u001b[39msend({\u001b[32m\"name\"\u001b[39m\u001b[33m:\u001b[39m\u001b[32m\"Jean\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"phone\"\u001b[39m\u001b[33m:\u001b[39m\u001b[32m\"515-895-9008\"\u001b[39m})\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 47 |\u001b[39m             expect(res\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m         })\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m         test(\u001b[32m\"Should not create a contact and return true\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m             \u001b[36mconst\u001b[39m res \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m requests(app)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/contact.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:47:32\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/contact.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:38:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mContactController › Add emergencies contacts › Should not create a contact and return true\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"This phone number is already in use\"\u001b[39m\n    Received: \u001b[31m\"Forbidden: NOT ALLOWED\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 |\u001b[39m                 \u001b[33m.\u001b[39mauth(token\u001b[33m,\u001b[39m{type\u001b[33m:\u001b[39m\u001b[32m'bearer'\u001b[39m})\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m                 \u001b[33m.\u001b[39msend({\u001b[32m\"name\"\u001b[39m\u001b[33m:\u001b[39m\u001b[32m\"Jean\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"phone\"\u001b[39m\u001b[33m:\u001b[39m\u001b[32m\"514-902-7863\"\u001b[39m})\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 54 |\u001b[39m             expect(res\u001b[33m.\u001b[39mtext)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"This phone number is already in use\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 55 |\u001b[39m         })\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m     describe(\u001b[32m\"Modify contact\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/contact.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:54:30\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/contact.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:38:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mContactController › Modify contact › Should modify the data and return true\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"Contact modified successfully\"\u001b[39m\n    Received: \u001b[31m\"Forbidden: NOT ALLOWED\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 65 |\u001b[39m                     \u001b[32m\"id\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"0\"\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 66 |\u001b[39m                 })\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 67 |\u001b[39m             expect(res\u001b[33m.\u001b[39mtext)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"Contact modified successfully\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m         })\u001b[22m\n\u001b[2m     \u001b[90m 69 |\u001b[39m         test(\u001b[32m\"Should not modify the data and return false\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m             \u001b[36mawait\u001b[39m cs\u001b[33m.\u001b[39maddContact(\u001b[32m\"C\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"514-679-4691\"\u001b[39m\u001b[33m,\u001b[39m\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/contact.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:67:30\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/contact.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:38:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mContactController › Modify contact › Should not modify the data and return false\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"This phone is already in use\"\u001b[39m\n    Received: \u001b[31m\"Forbidden: NOT ALLOWED\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 77 |\u001b[39m                     \u001b[32m\"id\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"0\"\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 78 |\u001b[39m                 })\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(res\u001b[33m.\u001b[39mtext)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"This phone is already in use\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m         })\u001b[22m\n\u001b[2m     \u001b[90m 81 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m })\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/contact.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:79:30\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/contact.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:38:58)\u001b[22m\u001b[2m\u001b[22m\n","name":"/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/contact.controller.test.ts","startTime":1739395876695,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["User Service","Creating a new user"],"duration":1139,"failureDetails":[],"failureMessages":[],"fullName":"User Service Creating a new user Should create a new user and return true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should create a new user and return true"},{"ancestorTitles":["User Service","Creating a new user"],"duration":1199,"failureDetails":[],"failureMessages":[],"fullName":"User Service Creating a new user Should not create a new user and return false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should not create a new user and return false"},{"ancestorTitles":["User Service","Find user by Email"],"duration":556,"failureDetails":[],"failureMessages":[],"fullName":"User Service Find user by Email Should find a user by email and return the user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should find a user by email and return the user"},{"ancestorTitles":["User Service","Find user by Email"],"duration":552,"failureDetails":[],"failureMessages":[],"fullName":"User Service Find user by Email Should not find a user by email and return false","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should not find a user by email and return false"},{"ancestorTitles":["User Service","Login"],"duration":838,"failureDetails":[],"failureMessages":[],"fullName":"User Service Login Should log the user in and return JWT","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should log the user in and return JWT"},{"ancestorTitles":["User Service","Login"],"duration":860,"failureDetails":[],"failureMessages":[],"fullName":"User Service Login Should not log the user in and return invalid credentials","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should not log the user in and return invalid credentials"},{"ancestorTitles":["User Service","Modify User"],"duration":929,"failureDetails":[],"failureMessages":[],"fullName":"User Service Modify User Should modify user and return true ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should modify user and return true "},{"ancestorTitles":["User Service","Modify User"],"duration":1250,"failureDetails":[],"failureMessages":[],"fullName":"User Service Modify User Should not modify user and return false ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should not modify user and return false "},{"ancestorTitles":["User Service","delete User"],"duration":587,"failureDetails":[],"failureMessages":[],"fullName":"User Service delete User Should delete user and return true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should delete user and return true"}],"endTime":1739395886603,"message":"","name":"/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/service/user.service.test.ts","startTime":1739395878438,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Contact Service","Get Emergencies contacts with the userID"],"duration":33,"failureDetails":[],"failureMessages":[],"fullName":"Contact Service Get Emergencies contacts with the userID Should return a list of 1 contacts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should return a list of 1 contacts"},{"ancestorTitles":["Contact Service","Get Emergencies contacts with the userID"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Contact Service Get Emergencies contacts with the userID Should not return a list of contacts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should not return a list of contacts"},{"ancestorTitles":["Contact Service","Add new Emergencies contacts with the userID"],"duration":109,"failureDetails":[],"failureMessages":[],"fullName":"Contact Service Add new Emergencies contacts with the userID Should create a contact and return true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should create a contact and return true"},{"ancestorTitles":["Contact Service","Add new Emergencies contacts with the userID"],"duration":63,"failureDetails":[],"failureMessages":[],"fullName":"Contact Service Add new Emergencies contacts with the userID Should not create a contact and return false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should not create a contact and return false"},{"ancestorTitles":["Contact Service","Update Emergencies contacts with the userID"],"duration":84,"failureDetails":[],"failureMessages":[],"fullName":"Contact Service Update Emergencies contacts with the userID Should update a contact and return true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should update a contact and return true"},{"ancestorTitles":["Contact Service","Update Emergencies contacts with the userID"],"duration":54,"failureDetails":[],"failureMessages":[],"fullName":"Contact Service Update Emergencies contacts with the userID Should not update the contact and return false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should not update the contact and return false"},{"ancestorTitles":["Contact Service","Update Emergencies contacts with the userID"],"duration":38,"failureDetails":[],"failureMessages":[],"fullName":"Contact Service Update Emergencies contacts with the userID Should not found the contact to modified and return false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should not found the contact to modified and return false"},{"ancestorTitles":["Contact Service","Delete emergencies contacts with his id"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"Contact Service Delete emergencies contacts with his id Should delete a contact and return true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should delete a contact and return true"}],"endTime":1739395887702,"message":"","name":"/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/service/contact.service.test.ts","startTime":1739395886616,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["GasController","Get latest info"],"duration":12,"failureDetails":[{"matcherResult":{"expected":108,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m108\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m108\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at /home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/gas.controller.test.ts:31:42\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/gas.controller.test.ts:38:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"GasController Get latest info Get latest info","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Get latest info"},{"ancestorTitles":["GasController","Get data history"],"duration":9,"failureDetails":[{"matcherResult":{"expected":2,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m2\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m2\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at /home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/gas.controller.test.ts:39:38\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/gas.controller.test.ts:38:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"GasController Get data history Should return the history","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Should return the history"},{"ancestorTitles":["GasController","Add data"],"duration":67,"failureDetails":[],"failureMessages":[],"fullName":"GasController Add data Should create the data and return true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should create the data and return true"}],"endTime":1739395889216,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGasController › Get latest info › Get latest info\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m108\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 |\u001b[39m                 \u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m\"/latest/0\"\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m                 \u001b[33m.\u001b[39mauth(token\u001b[33m,\u001b[39m{type\u001b[33m:\u001b[39m\u001b[32m'bearer'\u001b[39m})\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 31 |\u001b[39m             expect(res\u001b[33m.\u001b[39mbody\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mco2_amount)\u001b[33m.\u001b[39mtoBe(\u001b[35m108\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m         })\u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m     describe(\u001b[32m\"Get data history\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/gas.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:31:42\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/gas.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:38:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGasController › Get data history › Should return the history\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m2\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 |\u001b[39m                 \u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m\"/history/0\"\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m                 \u001b[33m.\u001b[39mauth(token\u001b[33m,\u001b[39m{type\u001b[33m:\u001b[39m\u001b[32m'bearer'\u001b[39m})\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 39 |\u001b[39m             expect(res\u001b[33m.\u001b[39mbody\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 40 |\u001b[39m         })\u001b[22m\n\u001b[2m     \u001b[90m 41 |\u001b[39m     })\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m     describe(\u001b[32m\"Add data\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/gas.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:39:38\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/controller/gas.controller.test.ts\u001b[39m\u001b[0m\u001b[2m:38:58)\u001b[22m\u001b[2m\u001b[22m\n","name":"/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/controller/gas.controller.test.ts","startTime":1739395887710,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["GasService","Get latest info"],"duration":47,"failureDetails":[],"failureMessages":[],"fullName":"GasService Get latest info Should return the latest info","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should return the latest info"},{"ancestorTitles":["GasService","Get data history"],"duration":33,"failureDetails":[],"failureMessages":[],"fullName":"GasService Get data history Should return the history","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should return the history"},{"ancestorTitles":["GasService","Add data"],"duration":52,"failureDetails":[],"failureMessages":[],"fullName":"GasService Add data Should create the data and return true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should create the data and return true"},{"ancestorTitles":["GasService","Delete data"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"GasService Delete data Should delete data with id and return true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should delete data with id and return true"}],"endTime":1739395889983,"message":"","name":"/home/jinno/Desktop/Project/session 6/NoGas_BE/src/test/service/gas.service.test.ts","startTime":1739395889223,"status":"passed","summary":""}],"wasInterrupted":false}
